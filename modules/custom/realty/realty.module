<?php

use Drupal\Core\Render\Element;
use Drupal\views\ViewExecutable;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
/* function realty_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  $forms = ['realty_step_1_form', 'realty_step_2_form', 'realty_step_3_form', 'realty_edit_form'];
  if (in_array($form_id, $forms)) {
    // Prevent revision log box access
    $form['revision_log']['#access'] = FALSE;
  }
} */

/**
 * Provides a theme definition for custom content entity realty
 * {@inheritdoc}
 */
function realty_theme($existing, $type, $theme, $path) {
  return [
    'realty' => [
      'render element' => 'elements',
    ],
    'realty__full' => [
      'base hook' => 'realty',
    ],
    'realty__teaser' => [
      'base hook' => 'realty'
    ],
  ];
}

/**
 * Prepares variables for templates.
 * implements hook_preprocess_HOOK()
 */
function template_preprocess_realty(array &$variables)
{
  foreach (Element::children($variables['elements']) as $key) {
    $variables['content'][$key] = $variables['elements'][$key];
  }

  $realty = $variables['elements']['#realty'];
  // The full realty object
  $variables['realty'] = $realty;

}

/**
 * Adds template possibility for view modes
 * Implements hook_provider_theme_suggestions_hook_alter
 */
function realty_theme_suggestions_realty_alter( array &$suggestions, array $vars, $hook ) {
  if ( $realty = $vars['elements']['#realty'] ) {
    if (isset($vars['elements']['#view_mode'])) {
      $suggestions[] = 'realty__' . $vars['elements']['#view_mode'];
    }
  }
}

/**
 * Implements hook_views_pre_render().
 */
function realty_views_pre_render(ViewExecutable $view) {
  if (isset($view) && ($view->storage->id() == 'realty_overview')) {
    $view->element['#attached']['library'][] = 'realty/realty_overview_page';
  }
}